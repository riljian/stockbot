name: Release

on:
  release:
    types: [created]

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT }}
  GKE_CLUSTER: ${{ secrets.GKE_CLUSTER }}
  GKE_ZONE: ${{ secrets.GKE_ZONE }}
  CONTAINER_REGISTRY_HOST: ${{ secrets.CONTAINER_REGISTRY_HOST}}
  IMAGE: stockbot

jobs:
  build-publish-deploy:
    name: Build, Publish, Deploy
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup gcloud CLI
        uses: google-github-actions/setup-gcloud@v0.2.0
        with:
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          project_id: ${{ secrets.GCP_PROJECT }}

      - name: Configure Docker to use the gcloud command-line tool as a credential helper for authentication
        run: |-
          gcloud --quiet auth configure-docker "$CONTAINER_REGISTRY_HOST"
          gcloud --quiet container clusters get-credentials "$GKE_CLUSTER" --zone "$GKE_ZONE"

      - name: Get the image version
        run: echo "IMAGE_VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_ENV

      - name: Build
        run: |-
          docker build \
            --tag "$CONTAINER_REGISTRY_HOST/$PROJECT_ID/$IMAGE:$IMAGE_VERSION" \
            --build-arg COMMIT_SHA="$GITHUB_SHA" \
            .

      - name: Publish
        run: |-
          docker push "$CONTAINER_REGISTRY_HOST/$PROJECT_ID/$IMAGE:$IMAGE_VERSION"

      - name: Deploy
        run: |-
          kubectl set image deployments.apps/stockbot stockbot=$CONTAINER_REGISTRY_HOST/$PROJECT_ID/$IMAGE:$IMAGE_VERSION
          kubectl set image cronjobs.batch/dump-daily-summary stockbot=$CONTAINER_REGISTRY_HOST/$PROJECT_ID/$IMAGE:$IMAGE_VERSION
